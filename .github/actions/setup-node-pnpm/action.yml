name: 'Setup Node.js and pnpm'
description: 'Sets up Node.js and pnpm with caching'
inputs:
  install-dependencies:
    description: 'Install pnpm dependencies (true/false)'
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Extract Node.js version from .tool-versions
      id: node-version
      shell: bash
      run: |
        NODE_VERSION=$(grep 'nodejs' .tool-versions | awk '{print $2}')
        echo "Using Node.js version: $NODE_VERSION"
        echo "version=$NODE_VERSION" >> $GITHUB_OUTPUT

    - name: Extract pnpm version from .tool-versions
      id: pnpm-version
      shell: bash
      run: |
        PNPM_VERSION=$(grep 'pnpm' .tool-versions | awk '{print $2}')
        echo "Using pnpm version: $PNPM_VERSION"
        echo "version=$PNPM_VERSION" >> $GITHUB_OUTPUT

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ steps.pnpm-version.outputs.version }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Restore pnpm cache
      id: cache-modules
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Setup Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
      with:
        node-version: ${{ steps.node-version.outputs.version }}
        cache: 'pnpm'

    - name: Install dependencies (if no cache hit)
      if: ${{ inputs.install-dependencies == 'true' && steps.cache-modules.outputs.cache-hit != 'true' }}
      shell: bash
      run: pnpm install --frozen-lockfile
